---
/**
 * This component renders an entire "day" of talks
 * in a less boxy style, using the compact version of the university logo.
 */
import type { CollectionEntry } from "astro:content"
import Talk from "./Talk.astro"
import { defaultCampus, printDate } from "../talk-utils"
import Image from "astro/components/Image.astro"

interface Props {
  date: string
  talks: Array<CollectionEntry<"talks">> | undefined
}

const { date, talks } = Astro.props
const niceDate = printDate(new Date(date))
const city = talks && talks[0] && talks[0].data.city
const campus =
  (talks && talks[0] && talks[0].data.campus) || (city && defaultCampus[city])
---

<div class={"talk-day " + (city || "")}>
  <ul class="talks">
    <li class="header">
      <div class="date">
        {niceDate}
      </div>
      <div class="location">
        <Image src={`/compact-${city}.svg`} alt={city} width="20" height="20" />
        <div class="campus">{campus}</div>
      </div>
    </li>
    {talks && talks.map((t) => <Talk talk={t} />)}
  </ul>
</div>

<style>
  a {
    color: inherit;
    transition: all 0.2s ease-in-out;
  }
  a:is(:hover, :focus) {
    background-color: rgba(0, 0, 0, 0.3);
  }
  .talks {
    margin: 0;
    padding: 0;
    list-style: none;
  }
  .header {
    padding: 0rem;
    margin: 0.5rem;
  }
  .location {
    font-size: 0.8rem;
    display: flex;
    gap: 0.3rem;
    align-items: center;
    margin-top: -0.4rem;
  }
  .location img {
    aspect-ratio: 1;
  }
  .date {
    font-weight: bold;
    font-size: 1.6rem;
  }
  .talk-day.darmstadt {
    --accent-color: var(--accent-darmstadt);
  }
  .talk-day.frankfurt {
    --accent-color: var(--accent-frankfurt);
  }
  .talk-day.mainz {
    --accent-color: var(--accent-mainz);
  }
  .talk-day {
    border: 2px solid rgb(var(--accent-color));
    border-radius: 20px;
    padding-left: 1rem;
  }
</style>
